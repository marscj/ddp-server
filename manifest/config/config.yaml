server:
  address:              ":8000"
  serverRoot:          "resource/public"
  openapiPath:          "/api.json"
  swaggerPath:          "/swagger"
  dumpRouterMap:        true 
  routeOverWrite:       true
  accessLogEnabled:     false
  accessLogPattern:     "access-{Ymd}.log"
  sessionPath:          "temp/sessions"    # Session文件存储目录    

# 数据库连接配置
database:
  logger:
    path:    "logs/sql"
    level:   "all"
    stdout:  true
    ctxKeys: ["RequestId"]

  default:
    link:   "mysql:root:Aa112211?@tcp(localhost:3306)/gfast-v2-os"
    # link:   "mysql:root:Aa112211?@tcp(127.0.0.1:3306)/focus"
    # link:   "pgsql:user=postgres password=Aa112211? host=localhost port=5432 dbname=focus"
    debug:  true

redis:
  # 单实例配置示例1
  default:
    address: 127.0.0.1:6379
    db:      1
    
# 内容设置
setting:
  title:       "中国中心-迪拜企业公众平台"
  keywords:    "Go,MVC,Cookie,Session,ORM,golang,cache,goframe,go frame,gf,go框架,web框架,高性能"
  description: "模块化、高性能、生产级的Go基础开发框架。实现了比较完善的基础设施建设，包括常用的核心开发组件， 如：缓存、日志、文件、时间、队列、数组、集合、字符串、定时器、命令行、文件锁、内存锁、对象池、连接池、资源管理、数据校验、数据编码、文件监控、 定时任务、数据库ORM、TCP/UDP组件、进程管理/通信、并发安全容器等等。 并提供了Web服务开发的系列核心组件，如：Router、Cookie、Session、Middleware、服务注册、配置管理、模板引擎等等， 支持热重启、热更新、多域名、多端口、多服务、HTTPS、Rewrite等特性。"
  adminId:     1 # 管理员ID

logger:
  path:    "logs/default"
  level:   "all"
  stdout:  true
  ctxKeys: ["RequestId"]

# 文件上传设置
upload:
  path: "upload"

gfcli:
  # 工具编译配置
  build:
    name:     "focus"
    arch:     "arm64"
    system:   "linux,darwin,windows"
    mod:      ""
    cgo:      0

  # dao生成
  gen:
    dao:
    - link:          "mysql:root:Aa112211?@tcp(localhost:3306)/gfast-v2-os"
    # - link:            "mysql:root:Aa112211?@tcp(127.0.0.1:3306)/focus"
    # - link: "pgsql:user=postgres password=Aa112211? host=localhost port=5432 dbname=focus"
      removePrefix:    "gf_"
      descriptionTag:  true
      noModelComment:  true

# [server]
#   # 基本配置
#   address             = ":80"                        # 本地监听地址。默认":80"
#   httpsAddr           = ":443"                       # TLS/HTTPS配置，同时需要配置证书和密钥。默认关闭
#   httpsCertPath       = ""                           # TLS/HTTPS证书文件本地路径，建议使用绝对路径。默认关闭
#   httpsKeyPath        = ""                           # TLS/HTTPS密钥文件本地路径，建议使用绝对路径。默认关闭
#   readTimeout         = "60s"                        # 请求读取超时时间，一般不需要配置。默认为60秒
#   writeTimeout        = "0"                          # 数据返回写入超时时间，一般不需要配置。默认不超时（0）
#   idleTimeout         = "60s"                        # 仅当Keep-Alive开启时有效，请求闲置时间。默认为60秒
#   maxHeaderBytes      = "10240"                      # 请求Header大小限制（Byte）。默认为10KB
#   keepAlive           = true                         # 是否开启Keep-Alive功能。默认true
#   serverAgent         = "GoFrame HTTP Server"        # 服务端Agent信息。默认为"GoFrame HTTP Server"

#   # 静态服务配置
#   indexFiles          = ["index.html","index.htm"]   # 自动首页静态文件检索。默认为["index.html", "index.htm"]
#   indexFolder         = false                        # 当访问静态文件目录时，是否展示目录下的文件列表。默认关闭，那么请求将返回403
#   serverRoot          = "/var/www"                   # 静态文件服务的目录根路径，配置时自动开启静态文件服务。默认关闭
#   searchPaths         = ["/home/www","/var/lib/www"] # 提供静态文件服务时额外的文件搜索路径，当根路径找不到时则按照顺序在搜索目录查找。默认关闭
#   fileServerEnabled   = false                        # 静态文件服务总开关。默认false

#   # Cookie配置
#   cookieMaxAge        = "365d"             # Cookie有效期。默认为365天
#   cookiePath          = "/"                # Cookie有效路径。默认为"/"表示全站所有路径下有效
#   cookieDomain        = ""                 # Cookie有效域名。默认为当前配置Cookie时的域名

#   # Sessions配置
#   sessionMaxAge       = "24h"              # Session有效期。默认为24小时
#   sessionIdName       = "gfsessionid"      # SessionId的键名名称。默认为gfsessionid
#   sessionCookieOutput = true               # Session特性开启时，是否将SessionId返回到Cookie中。默认true
#   sessionPath         = "/tmp/gsessions"   # Session存储的文件目录路径。默认为当前系统临时目录下的gsessions目录

#   # Logging配置
#   logPath             = ""                 # 日志文件存储目录路径，建议使用绝对路径。默认为空，表示关闭
#   logStdout           = true               # 日志是否输出到终端。默认为true
#   errorStack          = true               # 当Server捕获到异常时是否记录堆栈信息到日志中。默认为true
#   errorLogEnabled     = true               # 是否记录异常日志信息到日志中。默认为true
#   errorLogPattern     = "error-{Ymd}.log"  # 异常错误日志文件格式。默认为"error-{Ymd}.log"
#   accessLogEnabled    = false              # 是否记录访问日志。默认为false
#   accessLogPattern    = "access-{Ymd}.log" # 访问日志文件格式。默认为"access-{Ymd}.log"

#   # PProf配置
#   pprofEnabled        = false              # 是否开启PProf性能调试特性。默认为false
#   pprofPattern        = ""                 # 开启PProf时有效，表示PProf特性的页面访问路径，对当前Server绑定的所有域名有效。

#   # 其他配置
#   clientMaxBodySize   = 810241024          # 客户端最大Body上传限制大小，影响文件上传大小(Byte)。默认为8*1024*1024=8MB
#   formParsingMemory   = 1048576            # 解析表单时的缓冲区大小(Byte)，一般不需要配置。默认为1024*1024=1MB
#   nameToUriType       = 0                  # 路由注册中使用对象注册时的路由生成规则。默认为0
#   routeOverWrite      = false              # 当遇到重复路由注册时是否强制覆盖。默认为false，重复路由存在时将会在启动时报错退出
#   dumpRouterMap       = true               # 是否在Server启动时打印所有的路由列表。默认为true
#   graceful            = false              # 是否开启平滑重启特性，开启时将会在本地增加10000的本地TCP端口用于进程间通信。默认false             
#   gracefulTimeout     = 2                  # 父进程在平滑重启后多少秒退出，默认2秒。若请求耗时大于该值，可能会导致请求中断<br />