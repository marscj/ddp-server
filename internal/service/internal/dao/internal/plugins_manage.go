// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2022-02-17 18:44:17
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// PluginsManageDao is the data access object for table plugins_manage.
type PluginsManageDao struct {
	table   string               // table is the underlying table name of the DAO.
	group   string               // group is the database configuration group name of current DAO.
	columns PluginsManageColumns // columns contains all the column names of Table for convenient usage.
}

// PluginsManageColumns defines and stores column names for table plugins_manage.
type PluginsManageColumns struct {
	Id            string // ID
	StoreId       string // 插件在商城中的id
	PName         string // 插件名称英文
	PTitle        string // 插件名称
	PDescription  string // 插件介绍
	PAuth         string // 作者
	IsInstall     string // 是否安装
	Status        string // 状态
	Version       string // 当前版本
	Price         string // 价格
	DownloadTimes string // 下载次数
	InstallPath   string // 安装路径（用于卸载）
}

//  pluginsManageColumns holds the columns for table plugins_manage.
var pluginsManageColumns = PluginsManageColumns{
	Id:            "id",
	StoreId:       "store_id",
	PName:         "p_name",
	PTitle:        "p_title",
	PDescription:  "p_description",
	PAuth:         "p_auth",
	IsInstall:     "is_install",
	Status:        "status",
	Version:       "version",
	Price:         "price",
	DownloadTimes: "download_times",
	InstallPath:   "install_path",
}

// NewPluginsManageDao creates and returns a new DAO object for table data access.
func NewPluginsManageDao() *PluginsManageDao {
	return &PluginsManageDao{
		group:   "default",
		table:   "plugins_manage",
		columns: pluginsManageColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *PluginsManageDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *PluginsManageDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *PluginsManageDao) Columns() PluginsManageColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *PluginsManageDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *PluginsManageDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *PluginsManageDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
